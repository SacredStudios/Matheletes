[{"/Users/jessiecoleman/Documents/GitHub/matheletes/src/index.js":"1","/Users/jessiecoleman/Documents/GitHub/matheletes/src/App.js":"2","/Users/jessiecoleman/Documents/GitHub/matheletes/src/reportWebVitals.js":"3","/Users/jessiecoleman/Documents/GitHub/matheletes/src/components/MathHandler.jsx":"4","/Users/jessiecoleman/Documents/GitHub/matheletes/src/components/Timer.jsx":"5"},{"size":535,"mtime":1687293734000,"results":"6","hashOfConfig":"7"},{"size":555,"mtime":1687546576000,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1687293736000,"results":"9","hashOfConfig":"7"},{"size":2765,"mtime":1687548112000,"results":"10","hashOfConfig":"7"},{"size":1026,"mtime":1687547982000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"m0not",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jessiecoleman/Documents/GitHub/matheletes/src/index.js",[],[],"/Users/jessiecoleman/Documents/GitHub/matheletes/src/App.js",["29"],[],"import logo from './logo.svg';\nimport './App.css';\nimport MathHandler from './components/MathHandler';\n\nfunction App() {\n  return (\n    <div className=\"App\">  \n    \n    <div className = \"title_\">Matheletes</div>  \n      <header className=\"App-header\">     \n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n         <MathHandler/>\n      \n        </p>\n        <a\n          className=\"App-link\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/jessiecoleman/Documents/GitHub/matheletes/src/reportWebVitals.js",[],[],"/Users/jessiecoleman/Documents/GitHub/matheletes/src/components/MathHandler.jsx",["30"],[],"import React, { useState } from \"react\";\r\nimport Timer from \"./Timer\";\r\nimport \"./MathHandler.css\";\r\n\r\nlet x = Math.floor(1 + Math.random() * 12);\r\nlet y = Math.floor(1 + Math.random() * 12);\r\n\r\nconst MathHandler = () => {\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [points, setPoints] = useState(0);\r\n  const [timerStarted, setTimerStarted] = useState(false);\r\n\r\n  const recognitionSvc = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n  const recognition = new recognitionSvc();\r\n  recognition.continuous = true;\r\n  recognition.lang = \"en-GB\";\r\n  recognition.start();\r\n  recognition.onresult = (event) => {\r\n    for (const result of event.results) {\r\n      let x = `${result[0].transcript}`;\r\n      console.log(x);\r\n      if(x == \"start\") {\r\n        console.log(\"start here\");\r\n      }\r\n      x = x.replaceAll(\"zero\", 0);\r\n      x = x.replaceAll(\"one\", 1);\r\n      x = x.replaceAll(\"two\", 2);\r\n      x = x.replaceAll(\"three\", 3);\r\n      x = x.replaceAll(\"four\", 4);\r\n      x = x.replaceAll(\"five\", 5);\r\n      x = x.replaceAll(\"six\", 6);\r\n      x = x.replaceAll(\"seven\", 7);\r\n      x = x.replaceAll(\"eight\", 8);\r\n      x = x.replaceAll(\"nine\", 9);\r\n      x = x.replace(/\\D/g, \"\");\r\n      setAmount(x);\r\n      submitHandler(event);\r\n    }\r\n  };\r\n\r\n  const inputChangeHandler = (event) => {\r\n    setAmount(event.target.value);\r\n  };\r\n\r\n  const handleTimerStart = () => {\r\n    setTimerStarted(true);\r\n  };\r\n\r\n  const handleTimerFinish = () => {\r\n    setDisabled(true);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (amount.includes(String(x * y)) && !disabled) {\r\n      setAmount(\"\");\r\n      setPoints((points) => points + 1);\r\n      Shuffle();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"control_actions\">Points: {points}</div>\r\n      <Timer onTimerStart={handleTimerStart} onTimerFinish={handleTimerFinish} />\r\n      <div className=\"text\">\r\n      {timerStarted && (\r\n        <label>{x}</label>\r\n        )}\r\n        {timerStarted && (\r\n        <label> x </label>\r\n        )}\r\n        {timerStarted && (\r\n        <label>{y}</label>\r\n        )}\r\n      \r\n      </div>\r\n      <form onSubmit={submitHandler}>\r\n        <div className=\"control_input\">\r\n        {timerStarted && (\r\n          <input type=\"text\" value={amount} onChange={inputChangeHandler} />\r\n        )}\r\n        </div>\r\n        {timerStarted && (\r\n          <div className=\"btn\">\r\n            <button type=\"submit\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Shuffle = () => {\r\n  x = Math.floor(1 + Math.random() * 12);\r\n  y = Math.floor(1 + Math.random() * 12);\r\n};\r\n\r\nexport default MathHandler;","/Users/jessiecoleman/Documents/GitHub/matheletes/src/components/Timer.jsx",[],[],{"ruleId":"31","severity":1,"message":"32","line":16,"column":9,"nodeType":"33","endLine":20,"endColumn":10},{"ruleId":"34","severity":1,"message":"35","line":23,"column":12,"nodeType":"36","messageId":"37","endLine":23,"endColumn":14},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]